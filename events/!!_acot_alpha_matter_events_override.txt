############DARK MATTER EVENTS
namespace = acot_alpha_matter_events
#ALPHA EXISTENCE
country_event = {
	id = acot_alpha_matter_events.1
	title = acot_alpha_matter_events.1.name
	desc = {
		trigger = {
			is_country_type = default
		}
		text = acot_alpha_matter_events.1.a.desc
	}
	desc = {
		trigger = {
			is_country_type = ascended_empire
		}
		text = acot_alpha_matter_events.1.b.desc
	}
	picture = GFX_evt_ancient_records
	show_sound = event_mystery
	trigger = {
		is_valid_alpha_research_candidate = yes
	}
	mean_time_to_happen = {
		years = 2
	}
	option = {
		name = acot_alpha_matter_events.1.a
		trigger = {
			is_country_type = default
			is_ai = no
		}
		set_country_flag = hear_precursor_rumor
		set_country_flag = allow_databank_steal
		begin_event_chain = {
			event_chain = acot_alpha_tech_chain
		}
		capital_scope = {
			IF = {
				limit = {
					any_country = {
						is_fallen_empire = yes
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.1
					name = "acot_databank_attack_fe"
					desc = "acot_databank_attack_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
				create_point_of_interest = {
					id = acot_alpha_research.2
					name = "acot_databank_trick_fe"
					desc = "acot_databank_trick_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
			create_point_of_interest = {
				id = acot_alpha_research.3
				name = "acot_databank_ask_pmc"
				desc = "acot_databank_ask_pmc_desc"
				event_chain = acot_alpha_tech_chain
				location = this
			}
			IF = {
				limit = {
					any_country = {
						has_country_flag = curator_enclave_country
					}
					owner = {
						NOR = {
							is_homicidal = yes
							has_country_flag = attacked_curators
						}
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.4
					name = "acot_databank_ask_curator"
					desc = "acot_databank_ask_curator_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
			create_point_of_interest = {
				id = acot_alpha_research.5
				name = "acot_databank_self_assembly"
				desc = "acot_databank_self_assembly_desc"
				event_chain = acot_alpha_tech_chain
				location = this
			}
		}
	}
	option = {
		name = acot_alpha_matter_events.1.b
		custom_tooltip = acot_alpha_matter_events.1.b.explain
		set_country_flag = hear_precursor_rumor
		trigger = {
			is_country_type = ascended_empire
			is_ai = no
		}
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 1000
			}
		}
		add_resource = {
			influence = -1000
		}
		set_country_flag = allow_databank_steal
		begin_event_chain = {
			event_chain = acot_alpha_tech_chain
		}
		capital_scope = {
			IF = {
				limit = {
					any_country = {
						is_fallen_empire = yes
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.1
					name = "acot_databank_attack_fe"
					desc = "acot_databank_attack_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
				create_point_of_interest = {
					id = acot_alpha_research.2
					name = "acot_databank_trick_fe"
					desc = "acot_databank_trick_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
			create_point_of_interest = {
				id = acot_alpha_research.3
				name = "acot_databank_ask_pmc"
				desc = "acot_databank_ask_pmc_desc"
				event_chain = acot_alpha_tech_chain
				location = this
			}
			IF = {
				limit = {
					any_country = {
						has_country_flag = curator_enclave_country
					}
					owner = {
						NOR = {
							is_homicidal = yes
							has_country_flag = attacked_curators
						}
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.4
					name = "acot_databank_ask_curator"
					desc = "acot_databank_ask_curator_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
			create_point_of_interest = {
				id = acot_alpha_research.4
				name = "acot_databank_self_assembly"
				desc = "acot_databank_self_assembly_desc"
				event_chain = acot_alpha_tech_chain
				location = this
			}
		}
	}
	option = {
		name = acot_alpha_matter_events.1.bb
		custom_tooltip = acot_alpha_matter_events.1.bb_desc
		set_country_flag = hear_precursor_rumor
		default_hide_option = yes
		trigger = {
			is_ai = no
			is_country_type = ascended_empire
			any_owned_leader = {
				leader_class = scientist
			}
		}
		allow = {
			resource_stockpile_compare = {
				resource = influence
				value >= 1000
			}
		}
		add_resource = {
			influence = -1000
		}
		hidden_effect = {
			country_event = {
				id = acot_alpha_matter_events.6
			}
		}
		if = {
			limit = {
				NOT = {
					has_event_chain = acot_alpha_tech_chain
				}
			}
			begin_event_chain = {
				event_chain = acot_alpha_tech_chain
			}
		}
	}
	option = {
		name = acot_alpha_diy_postpone
		custom_tooltip = acot_alpha_diy_postpone_desc
		trigger = {
			is_country_type = default
			is_ai = no
		}
		set_timed_country_flag = {
			flag = block_precursor_rumor
			days = 720
		}
	}
	option = {
		name = acot_alpha_diy_postpone_ae_empire
		custom_tooltip = acot_alpha_diy_postpone_ae_empire_desc
		trigger = {
			is_country_type = ascended_empire
			is_ai = no
		}
		set_timed_country_flag = {
			flag = block_precursor_rumor
			days = 720
		}
	}
	option = {
		name = acot_alpha_matter_events.1.c
		trigger = {
			is_country_type = ascended_empire
			is_ai = no
		}
	}
	### AI IS TOO STUPID TO RELIABLY UNDERSTAND COMPLEX SYSTEMS WITHOUT BUNCH OF  CODES
	option = {
		name = EXCELLENT
		trigger = {
			is_ai = yes
		}
		country_event = {
			id = acot_alpha_matter_events.10
			days = 1800
			random = 1800
		}
	}
}













planet_event = {
	#uprising
	id = acot_alpha_matter_events.9005
	title = acot_alpha_matter_events.9005.name
	desc = acot_alpha_matter_events.9005.desc
	picture = GFX_acot_precursor_uprising
	show_sound = event_ai_started
	is_triggered_only = yes
	pre_triggers = {
		has_owner = yes
	}
	immediate = {
		owner = {
			save_event_target_as = organic_empire
		}
		owner = {
			save_event_target_as = current_uprising_originator
		}
		set_planet_flag = machup_capital@root.owner
		# event lock all fleets to prevent exploits
		owner = {
			every_owned_fleet = {
				set_event_locked = yes
			}
		}
		# find and flag planets
		owner = {
			effect_on_blob = {
				center = root.solar_system
				owned_planets_percentage = 0.7
				planet_limit = {
					OR = {
						controller = {
							is_same_empire = root.owner
						}
						solar_system = {
							exists = starbase
							starbase = {
								is_owned_by = root.owner
							}
						}
					}
					solar_system = {
						# never flip any planets in the capital system
						NOT = {
							any_system_planet = {
								is_same_empire = root.owner.capital_scope
							}
						}
					}
				}
				effect = {
					set_star_flag = machup_system_flip
				}
			}
		}
		# create machine species
		create_species = {
			name = "Marked of Precursor"
			class = MACHINE
			portrait = random
			traits = random
			immortal = yes
		}
		# create machine country
		owner = {
			create_country = {
				name = random
				type = default
				species = last_created_species
				ignore_initial_colony_error = yes
				day_zero_contact = no
				ethos = {
					ethic = ethic_gestalt_consciousness
				}
				authority = auth_machine_intelligence
				civics = {
					civic = civic_acot_rogue_precursor
					civic = civic_acot_rogue_precursor_fleet
					civic = civic_acot_rogue_precursor_data
				}
				flag = random
				origin = origin_separatists
				effect = {
					random_list = {
						25 = {
							set_empire_name = "Databank: BRAINIAC"
						}
						25 = {
							set_empire_name = "Databank: KABAL"
						}
						25 = {
							set_empire_name = "Databank: EVA"
						}
						25 = {
							set_empire_name = "Databank: ZOCOM"
						}
						25 = {
							set_empire_name = "Databank: CORTANA"
						}
						25 = {
							set_empire_name = "Databank: R2D2"
						}
						25 = {
							set_empire_name = "Databank: JOJO"
						}
						25 = {
							set_empire_name = "Databank: STROHEIM"
						}
						25 = {
							set_empire_name = "Databank: MURICA"
						}
						25 = {
							set_empire_name = "Databank: EDI"
						}
						25 = {
							set_empire_name = "Databank: GETH"
						}
						25 = {
							set_empire_name = "Databank: PANADA"
						}
					}
					create_leader = {
						name = "Databank Host Unit"
						class = ruler
						skill = 10
						species = this
					}
					assign_leader = last_created_leader
					modify_species = {
						species = this
						add_trait = trait_machine_unit
						add_traits_at_start_of_list = yes
					}
					modify_species = {
						species = this
						add_trait = trait_acot_robot_scv
						add_traits_at_start_of_list = yes
					}
					modify_species = {
						species = this
						add_trait = trait_acot_robot_superman_engines
						add_traits_at_start_of_list = yes
					}
					modify_species = {
						species = this
						add_trait = trait_acot_robot_heavy_duty
						add_traits_at_start_of_list = yes
					}
					save_event_target_as = current_uprising
					country_event = {
						id = acot_alpha_matter_events.9006
					}
					# setup happens here now
				}
			}
		}
	}
	option = {
		name = acot_alpha_matter_events.9005.a
		custom_tooltip = syndaw.1020.a.tooltip
	}
	option = {
		name = acot_alpha_matter_events.9005.b
		trigger = {
		}
		custom_tooltip = syndaw.1020.b.tooltip
		hidden_effect = {
			if = {
				limit = {
					event_target:organic_empire = {
						num_owned_planets > 0
					}
				}
				event_target:current_uprising = {
					set_player = event_target:current_uprising_originator
				}
			}
		}
	}
	after = {
		hidden_effect = {
			event_target:current_uprising_originator = {
				every_owned_fleet = {
					set_event_locked = no
				}
			}
		}
	}
}

country_event = {
	id = acot_alpha_matter_events.9006
	hide_window = yes
	is_triggered_only = yes
	trigger = {
	}
	immediate = {
		# saving uprising and host as event targets
		save_event_target_as = current_uprising
		from.owner = {
			save_event_target_as = current_uprising_originator
		}
		country_event = {
			id = acot_test_event.0
		}
		country_event = {
			id = acot_test_event.1
		}
		# setting flags
		set_country_flag = machine_uprising_country@from.owner
		set_country_flag = machine_uprising_country
		set_relation_flag = {
			who = event_target:current_uprising_originator
			flag = uprising_to_host_flag
		}
		from.owner = {
			set_country_flag = machine_uprising_originator@root
			set_country_flag = machine_uprising_originator
			set_relation_flag = {
				who = root
				flag = host_to_uprising_flag
			}
		}
		# setting graphical culture
		set_graphical_culture = event_target:current_uprising_originator
		# establish comms
		every_country = {
			limit = {
				is_playable_country = yes
				OR = {
					has_communications = event_target:current_uprising_originator
					intel_level = {
						level > low
						system = event_target:current_uprising_originator.capital_scope.solar_system
					}
					any_system = {
						has_star_flag = machup_system_flip
						prev = {
							intel_level = {
								level > low
								system = prev
							}
						}
					}
				}
			}
			establish_communications_no_message = root
			establish_contact = {
				who = root
				location = from
			}
		}
		# baseline resource stockpile
		add_resource = {
			energy = 500000
			minerals = 500000
			influence = 1000
			alloys = 500000
			acot_sr_dark_energy = 50000
			sr_dark_matter = 50000
			unity = 500000
			minor_artifacts = 500
			food = 500000
			volatile_motes = 50000
			exotic_gases = 50000
			rare_crystals = 50000
		}
		add_100_unity_per_year_passed = yes		# scripted effect
		# Machine Uprising opinion modifier
		add_opinion_modifier = {
			who = event_target:current_uprising_originator
			modifier = opinion_machine_uprising_originator
		}
		event_target:current_uprising_originator = {
			add_opinion_modifier = {
				who = root
				modifier = opinion_machine_uprising
			}
		}
		# clear new contact opinion modifier
		if = {
			limit = {
				has_opinion_modifier = {
					who = event_target:current_uprising_originator
					modifier = opinion_new_contact
				}
			}
			remove_opinion_modifier = {
				who = event_target:current_uprising_originator
				modifier = opinion_new_contact
			}
		}
		# flip capital planet and add at least 10 Machine pops
		from = {
			# flip military stations
			solar_system = {
				every_fleet_in_system = {
					limit = {
						exists = owner
						owner = {
							is_same_value = event_target:current_uprising_originator
						}
						any_owned_ship = {
							is_ship_class = shipclass_military_station
						}
					}
					set_owner = root
				}
			}
			set_owner = root
			set_controller = root
			set_capital = yes
			solar_system = {
				if = {
					limit = {
						exists = starbase
						starbase = {
							has_starbase_size <= starbase_starport
						}
					}
					random_fleet_in_system = {
						limit = {
							is_ship_class = shipclass_starbase
						}
						destroy_fleet = this
					}
					create_starbase = {
						size = acot_precusor_starbase
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_gun_battery
						module = acot_starbase_gun_battery
						owner = root
					}
				}
				else_if = {
					limit = {
						exists = starbase
						starbase = {
							has_starbase_size >= starbase_starhold
						}
					}
					random_fleet_in_system = {
						limit = {
							is_ship_class = shipclass_starbase
						}
						destroy_fleet = this
					}
					create_starbase = {
						size = acot_precusor_starfortress
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_shipyard
						module = acot_starbase_gun_battery
						module = acot_starbase_gun_battery
						owner = root
					}
				}
				else = {
					create_starbase = {
						size = starbase_citadel
						module = shipyard
						module = shipyard
						module = shipyard
						module = shipyard
						module = shipyard
						module = shipyard
						owner = root
					}
				}
			}
			while = {
				#limit = { free_housing > 0 }
				count = 30
				create_pop = {
					species = root
				}
			}
			if = {
				limit = {
					count_owned_pop = {
						count < 5
						limit = {
							is_exact_same_species = root
						}
					}
				}
				while = {
					limit = {
						count_owned_pop = {
							count < 5
							limit = {
								is_exact_same_species = root
							}
						}
					}
					random_owned_pop = {
						limit = {
							NOT = {
								is_exact_same_species = root
							}
						}
						kill_pop = yes
						prev = {
							create_pop = {
								species = root
							}
						}
					}
				}
			}
			# create armies
			while = {
				count = 30
				create_army = {
					owner = root
					type = fe_omnidroid_army
					species = owner_main_species
				}
			}
			owner = {
				create_leader = {
					class = general
					name = random
					skill = 10
					species = owner_main_species
				}
			}
			while = {
				count = 1
				create_army = {
					owner = root
					type = fe_godmech
					species = owner_main_species
				}
				assign_leader = last_created_leader
			}
			# flip remaining flagged planets
			while = {
				count = 100
				limit = {
					any_system = {
						has_star_flag = machup_system_flip
						exists = starbase
						starbase = {
							is_owned_by = event_target:current_uprising_originator
						}
					}
				}
				random_system = {
					limit = {
						has_star_flag = machup_system_flip
						exists = starbase
						starbase = {
							is_owned_by = event_target:current_uprising_originator
						}
					}
					starbase = {
						set_owner = root
					}
				}
			}
			event_target:current_uprising_originator = {
				if = {
					limit = {
						NOT = {
							exists = event_target:acot_crazed_ai
						}
					}
					create_country = {
						type = acot_crazed_machine
						name = "Prototype KABAL"
						flag = {
							icon = {
								category = "special"
								file = "extradimensional_01.dds"
							}
							background = {
								category = "backgrounds"
								file = "circle.dds"
							}
							colors = {
								"black"
								"red"
								"null"
								"null"
							}
						}
						effect = {
							establish_communications_no_message = root.owner
							save_global_event_target_as = acot_crazed_ai
						}
					}
				}
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					set_event_locked = no
					set_owner = event_target:acot_crazed_ai
				}
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					set_event_locked = no
					set_owner = event_target:acot_crazed_ai
				}
				random_owned_fleet = {
					limit = {
						is_ship_class = shipclass_military
					}
					set_event_locked = no
					set_owner = event_target:acot_crazed_ai
				}
				event_target:acot_crazed_ai = {
					set_faction_hostility = {
						set_friendly = yes
						target = root
					}
				}
				every_owned_planet = {
					limit = {
						solar_system = {
							#has_star_flag = machup_system_flip@event_target:current_uprising_originator
							has_star_flag = machup_system_flip
						}
					}
					# flip military stations
					solar_system = {
						every_fleet_in_system = {
							limit = {
								exists = owner
								owner = {
									is_same_value = event_target:current_uprising_originator
								}
								any_owned_ship = {
									is_ship_class = shipclass_military_station
								}
							}
							set_owner = root
						}
					}
					planet_event = {
						id = acot_test_event.12
					}
					set_planet_flag = been_flipped
					set_owner = root
					set_controller = root
					while = {
						limit = {
							free_housing > 0
						}
						create_pop = {
							species = root
						}
					}
					if = {
						limit = {
							count_owned_pop = {
								count < 5
								limit = {
									is_exact_same_species = root
								}
							}
						}
						while = {
							limit = {
								count_owned_pop = {
									count < 5
									limit = {
										is_exact_same_species = root
									}
								}
							}
							random_owned_pop = {
								limit = {
									NOT = {
										is_exact_same_species = root
									}
								}
								kill_pop = yes
								prev = {
									create_pop = {
										species = root
									}
								}
							}
						}
					}
					# create armies on planets
					while = {
						count = 30
						create_army = {
							owner = root
							type = fe_omnidroid_army
							species = owner_main_species
						}
					}
					owner = {
						create_leader = {
							class = general
							name = random
							skill = 10
							species = owner_main_species
						}
					}
					while = {
						count = 1
						create_army = {
							owner = root
							type = fe_godmech
							species = owner_main_species
						}
					}
					last_created_army = {
						assign_leader = last_created_leader
					}
				}
			}
			every_system = {
				limit = {
					has_star_flag = machup_system_flip
				}
				remove_star_flag = machup_system_flip
			}
		}
		# get host's technologies
		copy_techs_from = {
			target = event_target:current_uprising_originator
			except = {
			}
		}
		# get fe's technologies
		copy_techs_from = {
			target = event_target:acot_crazed_ai
			except = {
			}
		}
		# survey host's surveyed planets
		every_galaxy_planet = {
			limit = {
				is_surveyed = {
					who = event_target:current_uprising_originator
					status = yes
				}
			}
			set_surveyed = {
				surveyed = yes
				surveyor = root
			}
		}
		# declare war on host
		declare_war = {
			target = event_target:current_uprising_originator
			name = "NAME_Machine_Uprising_War"
			# "[This.MainDefender.GetAdj] Machine Uprising"
			attacker_war_goal = "wg_machine_uprising"
		}
		# create fleets
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = titan
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = battleship
					}
				}
				while = {
					count = 30
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						random_existing_design = destroyer
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = titan
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = battleship
					}
				}
				while = {
					count = 30
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						random_existing_design = destroyer
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = titan
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = battleship
					}
				}
				while = {
					count = 30
					create_ship = {
						name = random
						random_existing_design = cruiser
					}
				}
				while = {
					count = 40
					create_ship = {
						name = random
						random_existing_design = destroyer
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = precursor_titan
				}
				while = {
					count = 10
					create_ship = {
						name = random
						random_existing_design = precursor_battlecruiser
					}
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = precursor_escort
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = precursor_titan
				}
				while = {
					count = 10
					create_ship = {
						name = random
						random_existing_design = precursor_battlecruiser
					}
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = precursor_escort
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		create_fleet = {
			effect = {
				set_owner = root
				create_ship = {
					name = random
					random_existing_design = precursor_titan
				}
				while = {
					count = 10
					create_ship = {
						name = random
						random_existing_design = precursor_battlecruiser
					}
				}
				while = {
					count = 20
					create_ship = {
						name = random
						random_existing_design = precursor_escort
					}
				}
				set_fleet_stance = aggressive
				owner = {
					create_leader = {
						class = admiral
						name = random
						skill = 10
						species = owner_main_species
					}
				}
				set_leader = last_created_leader
			}
		}
		capital_scope = {
			solar_system = {
				create_fleet = {
					settings = {
						spawn_debris = no
						is_boss = yes
					}
					effect = {
						set_owner = root
						while = {
							count = 1
							create_ship = {
								random_existing_design = precursor_colossus
								graphical_culture = root
								effect = {
									set_disable_at_health = 0.02
								}
							}
						}
						set_location = {
							target = prevprev
							distance = 45
							angle = random
						}
					}
				}
			}
		}
		random_owned_planet = {
			last_created_fleet = {
				set_location = prev
			}
		}
		# add modifier for AI, including 10x naval cap
		if = {
			limit = {
				is_ai = yes
			}
			add_modifier = {
				modifier = uprising_ai_buff
				days = -1
			}
		}
		# add modifier for player, 10x naval cap
		else = {
			add_modifier = {
				modifier = uprising_player_buff
				days = 4800
			}
		}
		#science
		while = {
			count = 2
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = precursor_science
					}
					set_fleet_stance = evasive
					set_location = root.capital_scope
					owner = {
						create_leader = {
							class = scientist
							sub_type = survey
							name = random
							skill = 10
							species = owner_main_species
						}
					}
					set_leader = last_created_leader
				}
			}
		}
		#scientist
		owner = {
			create_leader = {
				class = scientist
				sub_type = engineering
				name = random
				skill = 10
				species = owner_main_species
			}
		}
		assign_leader = last_created_leader
		owner = {
			create_leader = {
				class = scientist
				sub_type = society
				name = random
				skill = 10
				species = owner_main_species
			}
		}
		assign_leader = last_created_leader
		owner = {
			create_leader = {
				class = scientist
				sub_type = physics
				name = random
				skill = 10
				species = owner_main_species
			}
		}
		assign_leader = last_created_leader
		owner = {
			create_leader = {
				class = governor
				name = random
				skill = 10
				species = owner_main_species
			}
		}
		owner = {
			create_leader = {
				class = governor
				name = random
				skill = 10
				species = owner_main_species
			}
		}
		#constructor
		while = {
			count = 2
			create_fleet = {
				effect = {
					set_owner = root
					create_ship = {
						name = random
						random_existing_design = precursor_constructor
					}
					set_fleet_stance = evasive
					set_location = root.capital_scope
				}
			}
		}
		every_owned_fleet = {
			#limit = { event_locked = yes }
			set_event_locked = no
		}
		every_playable_country = {
			limit = {
				NOR = {
					has_technology = tech_precursor_design
					is_same_value = root
					is_same_value = event_target:current_uprising_originator
				}
			}
			country_event = {
				id = acot_alpha_matter_events.9007
				days = 5
			}
		}
		observer_event = {
			id = observer.81
		}
	}
}



#SELECT LEADER FOR ALPHA DIY PROJECT
country_event = {
	id = acot_alpha_matter_events.6
	title = alpha_diy_events.3.name
	desc = alpha_diy_events.3.desc
	picture = GFX_evt_physics_research
	show_sound = event_conversation
	is_triggered_only = yes
	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			save_event_target_as = leader_1
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist
				NOT = {
					is_same_value = event_target:leader_1
				}
			}
			save_event_target_as = leader_2
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist
				NOR = {
					is_same_value = event_target:leader_1
					is_same_value = event_target:leader_2
				}
			}
			save_event_target_as = leader_3
		}
	}
	option = {
		name = "utopia.3190.1.a"
		event_target:leader_1 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_POWER"
				location = this
				owner = root
			}
		}
	}
	option = {
		name = "utopia.3190.1.b"
		event_target:leader_2 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_POWER"
				location = this
				owner = root
			}
		}
	}
	option = {
		name = "utopia.3190.1.c"
		event_target:leader_3 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_POWER"
				location = this
				owner = root
			}
		}
	}
}

#ALPHA PROJECT FAILED DOCTOR FREEMAN, TRY AGAIN!
country_event = {
	id = acot_alpha_matter_events.7
	title = alpha_diy_events.4.name
	desc = alpha_diy_events.4.desc.a
	desc = alpha_diy_events.4.desc.b
	desc = alpha_diy_events.4.desc.c
	desc = alpha_diy_events.4.desc.d
	desc = alpha_diy_events.4.desc.e
	desc = alpha_diy_events.4.desc.f
	desc = alpha_diy_events.4.desc.g
	desc = alpha_diy_events.4.desc.h
	desc = alpha_diy_events.4.desc.i
	picture = GFX_evt_nuclear_explosion
	show_sound = event_ship_explosion
	is_triggered_only = yes
	immediate = {
		random_owned_leader = {
			limit = {
				has_leader_flag = alpha_research_leader
			}
			kill_leader = {
			}
		}
		abort_special_project = {
			type = RESEARCH_ALPHA_POWER
		}
		abort_special_project = {
			type = RESEARCH_ALPHA_ARTIFACT_POWER
		}
	}
	option = {
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 50000
			}
		}
		add_resource = {
			energy = -50000
		}
		name = stellarite_events.4.a
		trigger = {
			any_owned_leader = {
				leader_class = scientist
			}
		}
		country_event = {
			id = acot_alpha_matter_events.6
		}
	}
	option = {
		allow = {
			resource_stockpile_compare = {
				resource = energy
				value >= 50000
			}
			resource_stockpile_compare = {
				resource = minor_artifacts
				value >= 100
			}
		}
		add_resource = {
			minor_artifacts = -100
			energy = -50000
		}
		name = aot_artifact_events.1.a
		trigger = {
			any_owned_leader = {
				leader_class = scientist
			}
		}
		country_event = {
			id = acot_alpha_matter_events.9
		}
	}
	option = {
		name = acot_alpha_diy_fail_reconsider
		custom_tooltip = acot_alpha_diy_fail_reconsider_desc
		set_country_flag = allow_databank_steal
		trigger = {
			is_ai = no
		}
		capital_scope = {
			IF = {
				limit = {
					any_country = {
						is_fallen_empire = yes
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.1
					name = "acot_databank_attack_fe"
					desc = "acot_databank_attack_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
				create_point_of_interest = {
					id = acot_alpha_research.2
					name = "acot_databank_trick_fe"
					desc = "acot_databank_trick_fe_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
			create_point_of_interest = {
				id = acot_alpha_research.3
				name = "acot_databank_ask_pmc"
				desc = "acot_databank_ask_pmc_desc"
				event_chain = acot_alpha_tech_chain
				location = this
			}
			IF = {
				limit = {
					any_country = {
						has_country_flag = curator_enclave_country
					}
					owner = {
						NOR = {
							is_homicidal = yes
							has_country_flag = attacked_curators
						}
					}
				}
				create_point_of_interest = {
					id = acot_alpha_research.4
					name = "acot_databank_ask_curator"
					desc = "acot_databank_ask_curator_desc"
					event_chain = acot_alpha_tech_chain
					location = this
				}
			}
		}
	}
	option = {
		name = acot_alpha_diy_fail_try_again
		custom_tooltip = acot_alpha_diy_fail_try_again_desc
		hidden_effect = {
			country_event = {
				id = acot_alpha_matter_events.8
			}
		}
	}
}

#ALPHA FAILED
country_event = {
	id = acot_alpha_matter_events.8
	title = acot_alpha_diy_fail
	desc = acot_alpha_diy_fail_desc
	picture = GFX_alert
	show_sound = event_bad_omen
	is_triggered_only = yes
	immediate = {
		end_event_chain = acot_alpha_tech_chain
		remove_country_flag = hear_precursor_rumor
		set_timed_country_flag = {
			flag = block_precursor_rumor
			days = 1800
		}
	}
}

#SELECT LEADER FOR ALPHA DIY PROJECT
country_event = {
	id = acot_alpha_matter_events.9
	title = alpha_diy_events.4.name
	desc = alpha_diy_events.4.desc
	picture = GFX_evt_physics_research
	show_sound = event_conversation
	is_triggered_only = yes
	immediate = {
		random_owned_leader = {
			limit = {
				leader_class = scientist
			}
			save_event_target_as = leader_1
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist
				NOT = {
					is_same_value = event_target:leader_1
				}
			}
			save_event_target_as = leader_2
		}
		random_owned_leader = {
			limit = {
				leader_class = scientist
				NOR = {
					is_same_value = event_target:leader_1
					is_same_value = event_target:leader_2
				}
			}
			save_event_target_as = leader_3
		}
	}
	option = {
		name = "utopia.3190.1.a"
		event_target:leader_1 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_ARTIFACT_POWER"
				location = this
				owner = root
			}
		}
	}
	option = {
		name = "utopia.3190.1.b"
		event_target:leader_2 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_ARTIFACT_POWER"
				location = this
				owner = root
			}
		}
	}
	option = {
		name = "utopia.3190.1.c"
		event_target:leader_3 = {
			set_leader_flag = alpha_research_leader
		}
		capital_scope = {
			enable_special_project = {
				name = "RESEARCH_ALPHA_ARTIFACT_POWER"
				location = this
				owner = root
			}
		}
	}
}

# Grant the AI alpha tier after 5-10 years.
country_event = {
	id = acot_alpha_matter_events.10
	is_triggered_only = yes
	hide_window = yes
	immediate = {
			add_research_option = tech_precursor_design
			add_research_option = tech_dark_matter_power_core_ae
			set_country_flag = learned_dm_alpha_existence
	}
}
